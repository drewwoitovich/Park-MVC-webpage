@model Capstone.Web.Models.Survey

@{
    ViewBag.Title = "Survey";

    List<SelectListItem> activityList = new List<SelectListItem>
    {
    new SelectListItem {Text = "Inactive", Value = "Inactive"},
    new SelectListItem {Text = "Sedentary", Value = "Sedentary"},
    new SelectListItem {Text = "Active", Value = "Active"},
    new SelectListItem {Text = "Extremely Active", Value = "Extremely Active"}
    };

    List<SelectListItem> parkCodeList = new List<SelectListItem>
    {
        new SelectListItem {Text = "Cuyahoga Valley National Park", Value = "CVNP"},
        new SelectListItem {Text = "Everglades National Park", Value = "ENP"},
        new SelectListItem {Text = "Grand Canyon National Park", Value = "GCNP"},
        new SelectListItem {Text = "Glacier National Park", Value = "GNP"},
        new SelectListItem {Text = "Great Smoky Mountain National Park", Value = "GSMNP"},
        new SelectListItem {Text = "Grand Teton National Park", Value = "GTNP"},
        new SelectListItem {Text = "Mount Rainier National Park", Value = "MRNP"},
        new SelectListItem {Text = "Rocky Mountain National Park", Value = "RMNP"},
        new SelectListItem {Text = "Yellow National Park", Value = "YNP"},
        new SelectListItem {Text = "Yosemite National Park", Value = "YNP2"},
    };
}

<h2>Survey</h2>


@using (Html.BeginForm("Survey", "Home", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.SurveyId)

        <div class="form-group">
            @Html.LabelFor(model => model.ParkCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.ParkCode, parkCodeList,  new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ParkCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActivityLevel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.ActivityLevel, activityList,  new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ActivityLevel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
